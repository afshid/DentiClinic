<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2013-01-28T12:36:04</timestamp>
        <product version="4.9.5000.15987" user=" " serial="retail-EVA">Dotfuscator Professional Edition EVALUATION</product>
    </header>
    <mapping>
        <module>
            <name>MNMControls.FADatePicker.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}</name>
                <newname>eval_r</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x60001ca-1</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x60001cb-1</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=128</signature>
                        <name>$$method0x60002fd-1</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=128</signature>
                        <name>$$method0x60002fd-2</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=128</signature>
                        <name>$$method0x60002fd-3</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x6000348-1</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x600038e-1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=12</signature>
                        <name>$$method0x60003a1-1</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=96</signature>
                        <name>$$method0x60003a3-1</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=96</signature>
                        <name>$$method0x60003a3-2</name>
                        <newname>eval_i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=12</name>
                <newname>eval_r/eval_b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=128</name>
                <newname>eval_r/eval_c</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{BAC3EC82-B29C-472D-B852-BFB7EDDB7807}/__StaticArrayInitTypeSize=96</name>
                <newname>eval_r/eval_a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BaseClasses.DateEditBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FormatInfoTypes()</signature>
                        <name>get_FormatInfo</name>
                    </method>
                    <method>
                        <signature>string(FADatePicker.FormatInfoTypes)</signature>
                        <name>GetFormatByFormatInfo</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FormatInfoTypes)</signature>
                        <name>set_FormatInfo</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateTextValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FormatInfoTypes</signature>
                        <name>format</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.FormatInfoTypes()</signature>
                        <name>FormatInfo</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BaseClasses.DateTimeCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;FADatePicker.CollectionChangedEventArgs&gt;)</signature>
                        <name>add_CollectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime[])</signature>
                        <name>AddRange</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(System.DateTime)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>System.DateTime(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;System.DateTime&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, System.DateTime)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CollectionChangedEventArgs)</signature>
                        <name>OnCollectionChanged</name>
                    </method>
                    <method>
                        <signature>bool(System.DateTime)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler`1&lt;FADatePicker.CollectionChangedEventArgs&gt;)</signature>
                        <name>remove_CollectionChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Predicate`1&lt;System.DateTime&gt;)</signature>
                        <name>RemoveAll</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void(int32, System.DateTime)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler`1&lt;FADatePicker.CollectionChangedEventArgs&gt;</signature>
                        <name>CollectionChanged</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.DateTime&gt;</signature>
                        <name>data</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                    </property>
                    <property>
                        <signature>System.DateTime(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler`1&lt;FADatePicker.CollectionChangedEventArgs&gt;</signature>
                        <name>CollectionChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.BaseClasses.PersianDateConverter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(FADatePicker.Utilies.PersianDate)</signature>
                        <name>DayOfWeek</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(System.DateTime)</signature>
                        <name>DayOfWeek</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32[0...,0...]()</signature>
                        <name>get_GDayTable</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32[0...,0...]()</signature>
                        <name>get_JDayTable</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GLeap</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>GregDays</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>JalaliDays</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>JLeap</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>JLeapYears</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>MonthDays</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>toDouble</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(FADatePicker.Utilies.PersianDate)</signature>
                        <name>ToGregorianDate</name>
                    </method>
                    <method>
                        <signature>System.DateTime(FADatePicker.Utilies.PersianDate)</signature>
                        <name>ToGregorianDateTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime(string)</signature>
                        <name>ToGregorianDateTime</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string)</signature>
                        <name>ToPersianDate</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string, System.TimeSpan)</signature>
                        <name>ToPersianDate</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(System.DateTime)</signature>
                        <name>ToPersianDate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>gdaytable</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GYearOff</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>jdaytable</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Solar</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>weekdays</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>weekdaysabbr</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[0...,0...]()</signature>
                        <name>GDayTable</name>
                    </property>
                    <property>
                        <signature>int32[0...,0...]()</signature>
                        <name>JDayTable</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BaseClasses.TextEditBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackColor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Image()</signature>
                        <name>get_BackgroundImage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_Font</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HideSelection</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDisabled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFocused</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadonly</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxLength</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Multiline</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.RightToLeft()</signature>
                        <name>get_RightToLeft</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SelectionLength</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SelectionStart</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SelectionText</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>GetContentRect</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InvokeClick</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InvokeDoubleClick</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>InvokeKeyDown</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>InvokeKeyPress</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>InvokeKeyUp</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>InvokeMouseDown</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InvokeMouseEnter</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InvokeMouseHover</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>InvokeMouseLeave</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>InvokeMouseMove</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>InvokeMouseUp</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnBackColorChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawButtons</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawDisabledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawNormalTextBoxBorder</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawOffice2003Border</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawXPTextBoxBorder</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnGotFocus</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnRightToLeftChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSizeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnTextChanged</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnThemeChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackColor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Image)</signature>
                        <name>set_BackgroundImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_Font</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HideSelection</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDisabled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFocused</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsReadonly</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxLength</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Multiline</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.RightToLeft)</signature>
                        <name>set_RightToLeft</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SelectionLength</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SelectionStart</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SelectionText</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetPosTextBox</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>SetPosTextBox</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_GotFocus</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_LostFocus</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_MouseEnter</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_MouseLeave</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_SizeChanged</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TextBox_TextChanged</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.RightToLeft</signature>
                        <name>rtl</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>TextBox</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BackColor</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Image()</signature>
                        <name>BackgroundImage</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Font()</signature>
                        <name>Font</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HideSelection</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDisabled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFocused</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadonly</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxLength</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Multiline</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.RightToLeft()</signature>
                        <name>RightToLeft</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SelectionLength</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SelectionStart</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SelectionText</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BaseControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_LayoutChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_LayoutChanging</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_NextScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_PreviousScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ReadOnlyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ValueChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ValueValidatingEventHandler)</signature>
                        <name>add_ValueValidating</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FocusNextControl</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.ErrorProvider()</signature>
                        <name>get_Error</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Font()</signature>
                        <name>get_Font</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasErrors</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDefault</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDisabled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFocused</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHot</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPressed</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadonly</name>
                    </method>
                    <method>
                        <signature>System.Drawing.StringFormat()</signature>
                        <name>get_TextFormat</name>
                    </method>
                    <method>
                        <signature>FADatePicker.TextAlignment()</signature>
                        <name>get_TextHorizontalAlignment</name>
                    </method>
                    <method>
                        <signature>FADatePicker.TextAlignment()</signature>
                        <name>get_TextVerticalAlignment</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_WordWrap</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnGotFocus</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnLayoutChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLeave</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLostFocus</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseLeave</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseWheel</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>OnNextScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnNextScrollItems</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>OnPreviousScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnPreviousScrollItems</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OnPropertyChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnReadOnlyStateChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnRightToLeftChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSystemColorsChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnValueChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ValueValidatingEventArgs)</signature>
                        <name>OnValueValidating</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Refresh</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_LayoutChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_LayoutChanging</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_NextScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_PreviousScrollItems</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ReadOnlyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ValueChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ValueValidatingEventHandler)</signature>
                        <name>remove_ValueValidating</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Font)</signature>
                        <name>set_Font</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasErrors</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDefault</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDisabled</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFocused</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsHot</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPressed</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsReadonly</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.TextAlignment)</signature>
                        <name>set_TextHorizontalAlignment</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.TextAlignment)</signature>
                        <name>set_TextVerticalAlignment</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_WordWrap</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeFont</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>allowWrap</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ErrorProvider</signature>
                        <name>error</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Font</signature>
                        <name>font</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDefault</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDisabled</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isFocused</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isHot</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPressed</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isReadOnly</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>LayoutChanged</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>LayoutChanging</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>NextScrollItems</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>PreviousScrollItems</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ReadOnlyChanged</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>textHorizontalAlignment</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>textVerticalAlignment</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ValueChanged</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.ValueValidatingEventHandler</signature>
                        <name>ValueValidating</name>
                        <newname>eval_l</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.ErrorProvider()</signature>
                        <name>Error</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Font()</signature>
                        <name>Font</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasErrors</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDefault</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDisabled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFocused</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsHot</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPressed</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadonly</name>
                    </property>
                    <property>
                        <signature>System.Drawing.StringFormat()</signature>
                        <name>TextFormat</name>
                    </property>
                    <property>
                        <signature>FADatePicker.TextAlignment()</signature>
                        <name>TextHorizontalAlignment</name>
                    </property>
                    <property>
                        <signature>FADatePicker.TextAlignment()</signature>
                        <name>TextVerticalAlignment</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>WordWrap</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>LayoutChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>LayoutChanging</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>NextScrollItems</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>PreviousScrollItems</name>
                    </event>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ReadOnlyChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ValueChanged</name>
                    </event>
                    <event>
                        <signature>FADatePicker.ValueValidatingEventHandler</signature>
                        <name>ValueValidating</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.BaseLocalizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(FADatePicker.StringID)</signature>
                        <name>GetLocalizedString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BaseStyledControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ThemeChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BeginUpdate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelUpdate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndUpdate</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_About</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanUpdate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRightToLeft</name>
                        <newname>eval_q</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.Drawing.IFAPainter()</signature>
                        <name>get_Painter</name>
                    </method>
                    <method>
                        <signature>FADatePicker.ThemeTypes()</signature>
                        <name>get_Theme</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseThemes</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnHandleCreated</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalManagerThemeChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSystemColorsChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnThemeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnThemeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ThemeChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Repaint</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ThemeTypes)</signature>
                        <name>set_Theme</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateRenderer</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>lockUpdate</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Drawing.FAPainterOffice2000</signature>
                        <name>PainterOffice2000</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Drawing.FAPainterOffice2003</signature>
                        <name>PainterOffice2003</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Drawing.FAPainterWindowsXP</signature>
                        <name>PainterWinXP</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripProfessionalRenderer</signature>
                        <name>renderer</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.ThemeTypes</signature>
                        <name>theme</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ThemeChanged</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>About</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CanUpdate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRightToLeft</name>
                    </property>
                    <property>
                        <signature>FADatePicker.Drawing.IFAPainter()</signature>
                        <name>Painter</name>
                    </property>
                    <property>
                        <signature>FADatePicker.ThemeTypes()</signature>
                        <name>Theme</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseThemes</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ThemeChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.BindPopupControlEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.IPopupControl()</signature>
                        <name>get_BindedControl</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_OwnerControl</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>set_BindedControl</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Control</signature>
                        <name>parent</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAPopup.IPopupControl</signature>
                        <name>popupControl</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.FAPopup.IPopupControl()</signature>
                        <name>BindedControl</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>OwnerControl</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.BindPopupControlEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, FADatePicker.BindPopupControlEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.BindPopupControlEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CalendarButtonClickedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(FADatePicker.FAMonthViewButtons)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAMonthViewButtons()</signature>
                        <name>get_Button</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAMonthViewButtons</signature>
                        <name>button</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.FAMonthViewButtons()</signature>
                        <name>Button</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CalendarButtonClickedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, FADatePicker.CalendarButtonClickedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.CalendarButtonClickedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CollectionChangedEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(FADatePicker.CollectionChangeType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.CollectionChangeType()</signature>
                        <name>get_ChangeType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.CollectionChangeType</signature>
                        <name>changeType</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.CollectionChangeType()</signature>
                        <name>ChangeType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CollectionChangeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.CollectionChangeType</signature>
                        <name>Add</name>
                    </field>
                    <field>
                        <signature>FADatePicker.CollectionChangeType</signature>
                        <name>Clear</name>
                    </field>
                    <field>
                        <signature>FADatePicker.CollectionChangeType</signature>
                        <name>Other</name>
                    </field>
                    <field>
                        <signature>FADatePicker.CollectionChangeType</signature>
                        <name>Remove</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CustomDrawDayEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Rectangle, System.Drawing.Graphics, int32, int32, int32, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Day</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Graphics()</signature>
                        <name>get_Graphics</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Handled</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsToday</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Month</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Rectangle</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Handled</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dayNo</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Graphics</signature>
                        <name>g</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>handled</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isToday</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>monthNo</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yearNo</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Day</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Graphics()</signature>
                        <name>Graphics</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Handled</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsToday</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Month</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Rectangle</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Year</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.CustomDrawDayEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, FADatePicker.CustomDrawDayEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.CustomDrawDayEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Design.DateTimeCollectionEditor</name>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>CreateCollectionItemType</name>
                    </method>
                    <method>
                        <signature>object(System.Type)</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>System.Type[]()</signature>
                        <name>CreateNewItemTypes</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Design.FABaseDesigner</name>
                <newname>eval_b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Design.FADatePickerDesigner</name>
                <newname>eval_j</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Design.FAMonthViewDesigner</name>
                <newname>eval_o</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.ColorInfo</name>
                <newname>eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BtnFaceColorPart</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HighlightColorPart</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WindowColorPart</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.FAPainterBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Graphics, System.Drawing.Rectangle, bool, bool, int32)</signature>
                        <name>DrawArrow</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Graphics, System.Drawing.Rectangle, bool, bool, int32)</signature>
                        <name>DrawVerticalArrow</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.FAPainterOffice2000</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool)</signature>
                        <name>DrawBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, string, System.Drawing.Font, System.Drawing.StringFormat, FADatePicker.ItemState, bool, bool)</signature>
                        <name>DrawButton</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, FADatePicker.ItemState)</signature>
                        <name>DrawButtonFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawFilledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectedPanel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectionBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawVerticalSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawWhiteBackground</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.FAPainterOffice2003</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool)</signature>
                        <name>DrawBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, string, System.Drawing.Font, System.Drawing.StringFormat, FADatePicker.ItemState, bool, bool)</signature>
                        <name>DrawButton</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, FADatePicker.ItemState)</signature>
                        <name>DrawButtonFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawFilledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectedPanel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectionBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawVerticalSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawWhiteBackground</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.FAPainterWindowsXP</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool)</signature>
                        <name>DrawBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, string, System.Drawing.Font, System.Drawing.StringFormat, FADatePicker.ItemState, bool, bool)</signature>
                        <name>DrawButton</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, FADatePicker.ItemState)</signature>
                        <name>DrawButtonFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawFilledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectedPanel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectionBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawVerticalSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawWhiteBackground</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.IFAPainter</name>
                <methodlist>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Graphics, System.Drawing.Rectangle, bool, bool, int32)</signature>
                        <name>DrawArrow</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool)</signature>
                        <name>DrawBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, string, System.Drawing.Font, System.Drawing.StringFormat, FADatePicker.ItemState, bool, bool)</signature>
                        <name>DrawButton</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, FADatePicker.ItemState)</signature>
                        <name>DrawButtonFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawFilledBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectedPanel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle)</signature>
                        <name>DrawSelectionBorder</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawSeparator</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Graphics, System.Drawing.Rectangle, bool, bool, int32)</signature>
                        <name>DrawVerticalArrow</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Point, System.Drawing.Point)</signature>
                        <name>DrawVerticalSeparator</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Graphics, System.Drawing.Rectangle, bool, float32)</signature>
                        <name>DrawWhiteBackground</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Drawing.Office2003Colors</name>
                <newname>eval_p</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(System.Drawing.Color, float32, System.Drawing.Color, float32)</signature>
                        <name>CalcColor</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(System.Drawing.Color, float32, System.Drawing.Color, float32, System.Drawing.Color, float32)</signature>
                        <name>CalcColor</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32)</signature>
                        <name>CalcNavColor</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>CalcValue</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32)</signature>
                        <name>FromRgb</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Hashtable()</signature>
                        <name>get_Colors</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.Drawing.Office2003Colors()</signature>
                        <name>get_Default</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(FADatePicker.Office2003Color)</signature>
                        <name>get_Item</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32, int32, int32)</signature>
                        <name>GetLightColor</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32(FADatePicker.Drawing.ColorInfo, unsigned int8, unsigned int8, unsigned int8)</signature>
                        <name>GetLightIndex</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(System.Drawing.Color, System.Drawing.Color, int32)</signature>
                        <name>GetMiddleRGB</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(System.Drawing.Color)</signature>
                        <name>GetRealColor</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.XPThemeType()</signature>
                        <name>GetThemeType</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>InitOfficeColors</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitStandardColors</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.Drawing.ColorInfo</signature>
                        <name>colorInfo</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>colors</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Drawing.Office2003Colors</signature>
                        <name>defaultColors</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>Office11Colors</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ENLocalizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(FADatePicker.StringID)</signature>
                        <name>GetLocalizedString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAContainerComboBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.BindPopupControlEventHandler)</signature>
                        <name>add_BindPopupControl</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ButtonClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_PopupClosing</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_PopupShowing</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.IPopupControl()</signature>
                        <name>get_BindedControl</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Readonly</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>GetButtonRect</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>GetContentRect</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideDropDown</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsMouseOverButton</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.BindPopupControlEventArgs)</signature>
                        <name>OnBindingPopupControl</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawButtons</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>OnDropDownKeyDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnDropDownMouseMove</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnFontChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnHandleCreated</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalLostFocus</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseUp</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnPopupClosing</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnPopupShowing</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RaiseButtonClick</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.BindPopupControlEventHandler)</signature>
                        <name>remove_BindPopupControl</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ButtonClick</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_PopupClosing</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_PopupShowing</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Readonly</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowDropDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAPopup.IPopupControl</signature>
                        <name>bindedControl</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.BindPopupControlEventHandler</signature>
                        <name>BindPopupControl</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ButtonClick</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isButtonHot</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isButtonPressed</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>PopupClosing</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>PopupShowing</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>readOnly</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.FAPopup.IPopupControl()</signature>
                        <name>BindedControl</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>Readonly</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>FADatePicker.BindPopupControlEventHandler</signature>
                        <name>BindPopupControl</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ButtonClick</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>PopupClosing</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>PopupShowing</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FADatePicker</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_SelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.SelectedDateTimeChangingEventHandler)</signature>
                        <name>add_SelectedDateTimeChanging</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNull</name>
                    </method>
                    <method>
                        <signature>FADatePicker.ScrollOptionTypes()</signature>
                        <name>get_ScrollOption</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_SelectedDateTime</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.BindPopupControlEventArgs)</signature>
                        <name>OnBindingPopupControl</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalLocalizerChanged</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalPopupShowing</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalRightToLeftChanged</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.CalendarButtonClickedEventArgs)</signature>
                        <name>OnMVButtonClicked</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnMVSelectedDateTimeChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.SelectedDateTimeChangingEventArgs)</signature>
                        <name>OnSelectedDateTimeChanging</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.CancelEventArgs)</signature>
                        <name>OnValidating</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ValueValidatingEventArgs)</signature>
                        <name>OnValueValidating</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_SelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.SelectedDateTimeChangingEventHandler)</signature>
                        <name>remove_SelectedDateTimeChanging</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetSelectedDateTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNull</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ScrollOptionTypes)</signature>
                        <name>set_ScrollOption</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_SelectedDateTime</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>SetSelectedDateTime</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeSelectedDateTime</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateTextValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAMonthViewContainer</signature>
                        <name>mv</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>selectedDateTime</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateTimeChanged</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.SelectedDateTimeChangingEventHandler</signature>
                        <name>SelectedDateTimeChanging</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNull</name>
                    </property>
                    <property>
                        <signature>FADatePicker.ScrollOptionTypes()</signature>
                        <name>ScrollOption</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>SelectedDateTime</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateTimeChanged</name>
                    </event>
                    <event>
                        <signature>FADatePicker.SelectedDateTimeChangingEventHandler</signature>
                        <name>SelectedDateTimeChanging</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FALocalizeManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_LocalizerChanged</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_CustomCulture</name>
                    </method>
                    <method>
                        <signature>FADatePicker.BaseLocalizer()</signature>
                        <name>get_CustomLocalizer</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_FarsiCulture</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_InvariantCulture</name>
                    </method>
                    <method>
                        <signature>FADatePicker.BaseLocalizer(System.Globalization.CultureInfo)</signature>
                        <name>GetLocalizerByCulture</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLocalizerChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_LocalizerChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_CustomCulture</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.BaseLocalizer)</signature>
                        <name>set_CustomLocalizer</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>customCulture</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.BaseLocalizer</signature>
                        <name>customLocalizer</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.ENLocalizer</signature>
                        <name>en</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>englishCulture</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FALocalizer</signature>
                        <name>fa</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>farsiCulture</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>LocalizerChanged</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>CustomCulture</name>
                    </property>
                    <property>
                        <signature>FADatePicker.BaseLocalizer()</signature>
                        <name>CustomLocalizer</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>FarsiCulture</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>InvariantCulture</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>LocalizerChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FALocalizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(FADatePicker.StringID)</signature>
                        <name>GetLocalizedString</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAMonthView</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CalendarButtonClickedEventHandler)</signature>
                        <name>add_ButtonClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_DayChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CustomDrawDayEventHandler)</signature>
                        <name>add_DrawCurrentDay</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_MonthChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_SelectedDateRangeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_SelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_YearChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, FADatePicker.TRectangleAction)</signature>
                        <name>AddActiveRect</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, FADatePicker.TRectangleAction, object)</signature>
                        <name>AddActiveRect</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAMonthView/ActRect(System.Drawing.Point)</signature>
                        <name>FindActiveRectByPoint</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.FAMonthView/ActRect(object)</signature>
                        <name>FindActiveRectByTag</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.AnchorStyles()</signature>
                        <name>get_Anchor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CurrentMonthName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Day</name>
                    </method>
                    <method>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>get_DefaultCalendar</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_DefaultCulture</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.DockStyle()</signature>
                        <name>get_Dock</name>
                    </method>
                    <method>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>get_HijriCalendar</name>
                    </method>
                    <method>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>get_InvariantCalendar</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_InvariantCulture</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsMultiSelect</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNull</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPopupMode</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRightToLeftCulture</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Month</name>
                    </method>
                    <method>
                        <signature>System.Drawing.StringFormat()</signature>
                        <name>get_OneLineNoTrimming</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianCalendar()</signature>
                        <name>get_PersianCalendar</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_PersianCulture</name>
                    </method>
                    <method>
                        <signature>FADatePicker.ScrollOptionTypes()</signature>
                        <name>get_ScrollOption</name>
                    </method>
                    <method>
                        <signature>FADatePicker.BaseClasses.DateTimeCollection()</signature>
                        <name>get_SelectedDateRange</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_SelectedDateTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowBorder</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowFocusRect</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetAbbrDayName</name>
                    </method>
                    <method>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>GetDefaultCalendar</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetFirstDayOfWeek</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Point)</signature>
                        <name>HitTest</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CalendarButtonClickedEventArgs)</signature>
                        <name>OnButtonClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnDayChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnDoubleClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawBody</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawBorder</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CustomDrawDayEventArgs)</signature>
                        <name>OnDrawCurrentDay</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawFooter</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawFooterButtons</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawHeader</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawMonthHeader</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnDrawYearHeader</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnEnterPressed</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnGotFocus</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnInternalLocalizeChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>OnInternalMouseClick</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnInternalMouseDown</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.KeyEventArgs)</signature>
                        <name>OnKeyDown</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnLostFocus</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMonthChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseClick</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseDown</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseEnter</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMouseLeave</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.MouseEventArgs)</signature>
                        <name>OnMouseWheel</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaintBackground</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnRecalculateRequired</name>
                        <newname>eval_o</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAMonthView/ActRect)</signature>
                        <name>OnRectangleClick</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSelectedDateRangeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAMonthView/ActRect)</signature>
                        <name>OnSelectionClick</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.CollectionChangedEventArgs)</signature>
                        <name>OnSelectionCollectionChanged</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnYearChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalculateSelectionDown</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalculateSelectionLeft</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalculateSelectionRight</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RecalculateSelectionUp</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CalendarButtonClickedEventHandler)</signature>
                        <name>remove_ButtonClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_DayChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.CustomDrawDayEventHandler)</signature>
                        <name>remove_DrawCurrentDay</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_MonthChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_SelectedDateRangeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_SelectedDateTimeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_YearChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetActiveRectanglesState</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetAllRectangleStates</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetFocusedRectangleState</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetSelectedRectangleState</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScrollDaysDown</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScrollDaysLeft</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScrollDaysRight</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ScrollDaysUp</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.AnchorStyles)</signature>
                        <name>set_Anchor</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.Calendar)</signature>
                        <name>set_DefaultCalendar</name>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_DefaultCulture</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.DockStyle)</signature>
                        <name>set_Dock</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsMultiSelect</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsNull</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsPopupMode</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ScrollOptionTypes)</signature>
                        <name>set_ScrollOption</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_SelectedDateTime</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowBorder</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowFocusRect</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_Size</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetFocusOnNextControl</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetFocusOnPrevControl</name>
                        <newname>eval_p</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetNoneDay</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetTodayDay</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeDefaultCalendar</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeDefaultCulture</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeSelectedDateRange</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeSelectedDateTime</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldSerializeSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToNextMonth</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToNextYear</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToPrevMonth</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ToPrevYear</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>btnNoneActive</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>btnTodayActive</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.CalendarButtonClickedEventHandler</signature>
                        <name>ButtonClicked</name>
                        <newname>eval_ag</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.Calendar</signature>
                        <name>customCalendar</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>DayChanged</name>
                        <newname>eval_ac</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.CustomDrawDayEventHandler</signature>
                        <name>DrawCurrentDay</name>
                        <newname>eval_af</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>dtSelected</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.StringFormat</signature>
                        <name>format</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.GregorianCalendar</signature>
                        <name>gc</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.HijriCalendar</signature>
                        <name>hc</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iDay</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iLastFocused</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iMonth</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isMultiSelect</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isNull</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isPopupMode</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iYear</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>MonthChanged</name>
                        <newname>eval_ad</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianCalendar</signature>
                        <name>pc</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rcBody</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rcFooter</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rcHeader</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>rects</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>rectsCreated</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.ScrollOptionTypes</signature>
                        <name>scrollOption</name>
                        <newname>eval_z</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.BaseClasses.DateTimeCollection</signature>
                        <name>selectedDateRange</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateRangeChanged</name>
                        <newname>eval_ab</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateTimeChanged</name>
                        <newname>eval_aa</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>selectedGregorianDate</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>selectedRects</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showBorder</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showFocusRect</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>YearChanged</name>
                        <newname>eval_ae</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.AnchorStyles()</signature>
                        <name>Anchor</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CurrentMonthName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Day</name>
                    </property>
                    <property>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>DefaultCalendar</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>DefaultCulture</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.DockStyle()</signature>
                        <name>Dock</name>
                    </property>
                    <property>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>HijriCalendar</name>
                    </property>
                    <property>
                        <signature>System.Globalization.Calendar()</signature>
                        <name>InvariantCalendar</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>InvariantCulture</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsMultiSelect</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNull</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsPopupMode</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRightToLeftCulture</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Month</name>
                    </property>
                    <property>
                        <signature>System.Drawing.StringFormat()</signature>
                        <name>OneLineNoTrimming</name>
                    </property>
                    <property>
                        <signature>FADatePicker.Utilies.PersianCalendar()</signature>
                        <name>PersianCalendar</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>PersianCulture</name>
                    </property>
                    <property>
                        <signature>FADatePicker.ScrollOptionTypes()</signature>
                        <name>ScrollOption</name>
                    </property>
                    <property>
                        <signature>FADatePicker.BaseClasses.DateTimeCollection()</signature>
                        <name>SelectedDateRange</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>SelectedDateTime</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowBorder</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowFocusRect</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>Size</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Year</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>FADatePicker.CalendarButtonClickedEventHandler</signature>
                        <name>ButtonClicked</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>DayChanged</name>
                    </event>
                    <event>
                        <signature>FADatePicker.CustomDrawDayEventHandler</signature>
                        <name>DrawCurrentDay</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>MonthChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateRangeChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>SelectedDateTimeChanged</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>YearChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FAMonthView/ActRect</name>
                <newname>FADatePicker.FAMonthView/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Rectangle, FADatePicker.TRectangleAction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, FADatePicker.TRectangleAction, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, FADatePicker.TRectangleStatus, FADatePicker.TRectangleAction, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.TRectangleAction()</signature>
                        <name>get_Action</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSelected</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Rect</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.TRectangleStatus()</signature>
                        <name>get_State</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Tag</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.TRectangleStatus)</signature>
                        <name>set_State</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>m_act</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_bInvalidate</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>m_rect</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>m_state</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>m_tag</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAMonthViewButtons</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAMonthViewButtons</signature>
                        <name>MonthDay</name>
                    </field>
                    <field>
                        <signature>FADatePicker.FAMonthViewButtons</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>FADatePicker.FAMonthViewButtons</signature>
                        <name>Today</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAMonthViewContainer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Control, System.Drawing.Point)</signature>
                        <name>AllowMouseClick</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>CalendarChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClosePopup</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAMonthView()</signature>
                        <name>get_MonthViewControl</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_OwnerControl</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_OwnerEdit</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_PopupWindow</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.IPopupServiceControl()</signature>
                        <name>get_ServiceObject</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideCalendar</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnRightToLeftChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control)</signature>
                        <name>set_OwnerControl</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupServiceControl)</signature>
                        <name>set_ServiceObject</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowCalendar</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Point)</signature>
                        <name>ShowCalendar</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowPopup</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAPopup.FAHookPopup</signature>
                        <name>hook</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAMonthView</signature>
                        <name>mv</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Control</signature>
                        <name>owner</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAPopup.IPopupServiceControl</signature>
                        <name>popupServiceControl</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAPopup.IPopupServiceControl</signature>
                        <name>serviceObject</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.FAMonthView()</signature>
                        <name>MonthViewControl</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>OwnerControl</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>OwnerEdit</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>PopupWindow</name>
                    </property>
                    <property>
                        <signature>FADatePicker.FAPopup.IPopupServiceControl()</signature>
                        <name>ServiceObject</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.FAHookPopup</name>
                <newname>eval_i</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Control, System.Drawing.Point)</signature>
                        <name>CheckMouseDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClosePopups</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>FADatePicker.FAPopup.IHookController.get_OwnerHandle</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>FADatePicker.FAPopup.IHookController.InternalPostFilterMessage</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>FADatePicker.FAPopup.IHookController.InternalPreFilterMessage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.IPopupControl()</signature>
                        <name>get_Popup</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control(System.Windows.Forms.Control)</signature>
                        <name>GetParent</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Control)</signature>
                        <name>IsPopupMenu</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAPopup.IPopupControl</signature>
                        <name>popup</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>upMessages</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.FAHookPopupController</name>
                <newname>eval_q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.FAHookPopup(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>FindPopup</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupClosed</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupShowing</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>Popups</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.FAPopupContainer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>get_CreateParams</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>CreateParams</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.FAShadow</name>
                <newname>eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, int32, System.Windows.Forms.Form)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Rectangle)</signature>
                        <name>CheckRectangle</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle(System.Drawing.Rectangle, System.Drawing.Rectangle)</signature>
                        <name>CheckShadowIntersects</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Brush(bool, int32)</signature>
                        <name>CreateBrush</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList, int32, bool, System.Windows.Forms.Form, System.Drawing.Rectangle)</signature>
                        <name>CreateShadows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList, int32, bool, System.Windows.Forms.Form, System.Drawing.Rectangle, System.Drawing.Rectangle)</signature>
                        <name>CreateShadows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.CreateParams()</signature>
                        <name>get_CreateParams</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DefaultShadowSize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Brush()</signature>
                        <name>get_HorzBrush</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_RealBounds</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Brush()</signature>
                        <name>get_VertBrush</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideShadow</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList)</signature>
                        <name>HideShadows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Control)</signature>
                        <name>NeedHideCursor</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaint</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.PaintEventArgs)</signature>
                        <name>OnPaintBackground</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_RealBounds</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowShadow</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList)</signature>
                        <name>ShowShadows</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList, bool)</signature>
                        <name>ShowShadows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ArrayList, System.Drawing.Rectangle, System.Drawing.Rectangle, int32)</signature>
                        <name>UpdateShadows</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Brush</signature>
                        <name>brush</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>horizontalShadow</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Brush</signature>
                        <name>horzBrush</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Form</signature>
                        <name>owner</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>realBounds</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Brush</signature>
                        <name>vertBrush</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.FATopFormBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_PopupMove</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_PopupResize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BeginUpdate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CancelUpdate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndUpdate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowMouseActivate</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DrawShadow</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>get_InsertAfterWindow</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsTopMost</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_OwnerEdit</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_RealBounds</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_Shadows</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ShadowSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LayoutChanged</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnGotCapture</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnLostCapture</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnMove</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnResize</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnVisibleChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_PopupMove</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_PopupResize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DrawShadow</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_RealBounds</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ShadowSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetVisibleCore</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateShadows</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>UpdateZOrder</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>drawShadow</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lockUpdate</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MA_NOACTIVATE</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Control</signature>
                        <name>owner</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>PopupMove</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>PopupResize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>shadows</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>shadowSize</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_CAPTURECHANGED</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_LBUTTONDBLCLK</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_LBUTTONDOWN</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_MOUSEACTIVATE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_NCACTIVATE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_NCCREATE</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_WINDOWPOSCHANGED</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_WINDOWPOSCHANGING</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AllowMouseActivate</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DrawShadow</name>
                    </property>
                    <property>
                        <signature>native int()</signature>
                        <name>InsertAfterWindow</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsTopMost</name>
                    </property>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>OwnerEdit</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>RealBounds</name>
                    </property>
                    <property>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>Shadows</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ShadowSize</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>PopupMove</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>PopupResize</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FAPopup.FAWinPopupController</name>
                <newname>eval_f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>EmulateFormFocus</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDummy</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupClosed</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupShowing</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, unsigned int32, unsigned int32)</signature>
                        <name>SendMessage</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, bool)</signature>
                        <name>SetSimpleVisibleCore</name>
                    </method>
                    <method>
                        <signature>bool(native int, bool)</signature>
                        <name>SetVisibleCore</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, int32, int32, int32, int32, unsigned int32)</signature>
                        <name>SetWindowPos</name>
                    </method>
                    <method>
                        <signature>bool(native int, int32)</signature>
                        <name>ShowWindow</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>UpdateTopMost</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookInfo</name>
                <newname>eval_s</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.ArrayList()</signature>
                        <name>get_HookControllers</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThreadId</name>
                        <newname>eval_l</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>getMessageHookHandle</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Hook</signature>
                        <name>getMessageHookProc</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>hookControllers</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>inHook</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>inMouseHook</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>mouseHookHandle</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Hook</signature>
                        <name>mouseHookProc</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threadId</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>wndHookHandle</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.Hook</signature>
                        <name>wndHookProc</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookManager</name>
                <newname>eval_m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IHookController)</signature>
                        <name>AddController</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int, native int)</signature>
                        <name>CallNextHookEx</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentThread</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.HookManager()</signature>
                        <name>get_DefaultManager</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Hashtable()</signature>
                        <name>get_HookHash</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetCurrentThreadId</name>
                    </method>
                    <method>
                        <signature>FADatePicker.FAPopup.HookInfo()</signature>
                        <name>GetInfoByThread</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>int32(int32, native int, native int)</signature>
                        <name>GetMessageHook</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.HookInfo)</signature>
                        <name>InstallHook</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.HookManager/API_MSG&amp;)</signature>
                        <name>InternalGetMessage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.FAPopup.HookInfo, int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>InternalPostFilterMessage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.FAPopup.HookInfo, int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>InternalPreFilterMessage</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>int32(int32, native int, native int)</signature>
                        <name>MouseHook</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnApplicationExit</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OnThreadExit</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IHookController)</signature>
                        <name>RemoveController</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.HookInfo, bool)</signature>
                        <name>RemoveHook</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveHooks</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>native int(int32, FADatePicker.Hook, int32, int32)</signature>
                        <name>SetWindowsHookEx</name>
                    </method>
                    <method>
                        <signature>bool(native int)</signature>
                        <name>UnhookWindowsHookEx</name>
                    </method>
                    <method>
                        <signature>int32(int32, native int, native int)</signature>
                        <name>WndHook</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FAPopup.HookManager</signature>
                        <name>defaultManager</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>HookControllers</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>hookHash</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookManager/API_MSG</name>
                <newname>eval_m/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>FromMessage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Message()</signature>
                        <name>ToMessage</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>Hwnd</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>LParam</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Msg</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAPopup.HookManager/POINT</signature>
                        <name>Pt</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Time</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>WParam</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookManager/CWPSTRUCT</name>
                <newname>eval_m/eval_a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>hwnd</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lParam</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>message</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>wParam</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookManager/MOUSEHOOKSTRUCT</name>
                <newname>eval_m/eval_d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>dwExtraInfo</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwnd</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.FAPopup.HookManager/POINT</signature>
                        <name>Pt</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>wHitTestCode</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.HookManager/POINT</name>
                <newname>eval_m/eval_c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.IHookController</name>
                <newname>eval_k</newname>
                <methodlist>
                    <method>
                        <signature>native int()</signature>
                        <name>get_OwnerHandle</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>InternalPostFilterMessage</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool(int32, System.Windows.Forms.Control, native int, native int, native int)</signature>
                        <name>InternalPreFilterMessage</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.IHookController2</name>
                <newname>eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndGetMessage</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.IPopupControl</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Windows.Forms.Control, System.Drawing.Point)</signature>
                        <name>AllowMouseClick</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClosePopup</name>
                    </method>
                    <method>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>get_PopupWindow</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowPopup</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Windows.Forms.Control()</signature>
                        <name>PopupWindow</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAPopup.IPopupServiceControl</name>
                <methodlist>
                    <method>
                        <signature>void(native int)</signature>
                        <name>EmulateFormFocus</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDummy</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupClosed</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.FAPopup.IPopupControl)</signature>
                        <name>PopupShowing</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, bool)</signature>
                        <name>SetSimpleVisibleCore</name>
                    </method>
                    <method>
                        <signature>bool(native int, bool)</signature>
                        <name>SetVisibleCore</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>UpdateTopMost</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.Forms.Message&amp;)</signature>
                        <name>WndProc</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDummy</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.FAThemeManager</name>
                <methodlist>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_ManagerThemeChanged</name>
                    </method>
                    <method>
                        <signature>FADatePicker.ThemeTypes()</signature>
                        <name>get_Theme</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseGlobalThemes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseThemes</name>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnManagerThemeChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_ManagerThemeChanged</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.ThemeTypes)</signature>
                        <name>set_Theme</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>ManagerThemeChanged</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.ThemeTypes</signature>
                        <name>theme</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useGlobalThemes</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.ThemeTypes()</signature>
                        <name>Theme</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseGlobalThemes</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseThemes</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>ManagerThemeChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>FADatePicker.FormatInfoTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.FormatInfoTypes</signature>
                        <name>DateShortTime</name>
                    </field>
                    <field>
                        <signature>FADatePicker.FormatInfoTypes</signature>
                        <name>FullDateTime</name>
                    </field>
                    <field>
                        <signature>FADatePicker.FormatInfoTypes</signature>
                        <name>ShortDate</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Helpers.ControlUtils</name>
                <newname>eval_l</newname>
                <methodlist>
                    <method>
                        <signature>System.Drawing.Point(System.Drawing.Point, System.Drawing.Point, System.Drawing.Size)</signature>
                        <name>CalcLocation</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Hook</name>
                <newname>eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(int32, native int, native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(int32, native int, native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ItemState</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.ItemState</signature>
                        <name>HotTrack</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ItemState</signature>
                        <name>Normal</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ItemState</signature>
                        <name>Open</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ItemState</signature>
                        <name>Pressed</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Office2003Color</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Border</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button1Hot</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button1Pressed</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button2Hot</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Button2Pressed</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>ButtonDisabled</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>GroupRow</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Header</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Header2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>LinkBorder</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarBackColor1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarBackColor2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarExpandButtonRoundColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarGroupCaptionBackColor1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarGroupCaptionBackColor2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarGroupClientBackColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarLinkDisabledTextColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarLinkHightlightedTextColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarLinkTextColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavBarNavPaneHeaderBackColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>NavPaneBorderColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabBackColor1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabBackColor2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabPageBackColor1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabPageBackColor2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabPageBorderColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TabPageForeColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>Text</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Office2003Color</signature>
                        <name>TextDisabled</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ScrollOptionTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.ScrollOptionTypes</signature>
                        <name>Day</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ScrollOptionTypes</signature>
                        <name>Month</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ScrollOptionTypes</signature>
                        <name>Year</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.SelectedDateTimeChangingEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.DateTime, System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Cancel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Message</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_NewValue</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_OldValue</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Cancel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Message</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_NewValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>cancel</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>message</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>newValue</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>oldValue</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Cancel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Message</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>NewValue</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>OldValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.SelectedDateTimeChangingEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, FADatePicker.SelectedDateTimeChangingEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.SelectedDateTimeChangingEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.StringID</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Empty</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>FADateTextBox_InvalidDate</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>FADateTextBox_Required</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>FAMonthView_None</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>FAMonthView_Today</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Abort</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Cancel</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Ignore</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_No</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Ok</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Retry</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>MessageBox_Yes</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_0</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_1</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_2</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_3</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_4</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_5</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_6</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_7</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_8</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Numbers_9</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidDateFormat</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidDateTime</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidDateTimeLength</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidDay</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidEra</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidFourDigitYear</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidHour</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidLeapYear</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidMillisecond</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidMinute</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidMonth</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidMonthDay</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidSecond</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidTimeFormat</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>PersianDate_InvalidYear</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Validation_Cancel</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Validation_NotValid</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Validation_NullText</name>
                    </field>
                    <field>
                        <signature>FADatePicker.StringID</signature>
                        <name>Validation_Required</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.TextAlignment</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>Center</name>
                    </field>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>Far</name>
                    </field>
                    <field>
                        <signature>FADatePicker.TextAlignment</signature>
                        <name>Near</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ThemeTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.ThemeTypes</signature>
                        <name>Office2000</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ThemeTypes</signature>
                        <name>Office2003</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>FADatePicker.ThemeTypes</signature>
                        <name>WindowsXP</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.TRectangleAction</name>
                <newname>eval_g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>MonthDay</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>MonthDown</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>MonthUp</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>NoneBtn</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>TodayBtn</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>WeekDay</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>YearDown</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleAction</signature>
                        <name>YearUp</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.TRectangleStatus</name>
                <newname>eval_h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>Active</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>ActiveSelect</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>All</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>Focused</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>FocusSelect</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>Normal</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>Pressed</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>FADatePicker.TRectangleStatus</signature>
                        <name>Selected</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.InvalidPersianDateFormatException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianCalendar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime(System.DateTime, int32)</signature>
                        <name>AddMonths</name>
                    </method>
                    <method>
                        <signature>System.DateTime(System.DateTime, int32)</signature>
                        <name>AddYears</name>
                    </method>
                    <method>
                        <signature>void(bool, int32, int32, int32)</signature>
                        <name>CheckDateRange</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool, int32)</signature>
                        <name>CheckEraRange</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(bool, int32)</signature>
                        <name>CheckMonthRange</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool, System.DateTime)</signature>
                        <name>CheckTicksRange</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool, int32)</signature>
                        <name>CheckYearRange</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_Eras</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TwoDigitYearMax</name>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetCentury</name>
                    </method>
                    <method>
                        <signature>int32(bool, System.DateTime)</signature>
                        <name>GetDayOfMonth</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetDayOfMonth</name>
                    </method>
                    <method>
                        <signature>System.DayOfWeek(System.DateTime)</signature>
                        <name>GetDayOfWeek</name>
                    </method>
                    <method>
                        <signature>int32(bool, System.DateTime)</signature>
                        <name>GetDayOfYear</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetDayOfYear</name>
                    </method>
                    <method>
                        <signature>int32(bool, int32, int32, int32)</signature>
                        <name>GetDaysInMonth</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>GetDaysInMonth</name>
                    </method>
                    <method>
                        <signature>int32(bool, int32, int32)</signature>
                        <name>GetDaysInYear</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetDaysInYear</name>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetEra</name>
                    </method>
                    <method>
                        <signature>int32(bool, System.DateTime)</signature>
                        <name>GetMonth</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetMonth</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>GetMonthsInYear</name>
                    </method>
                    <method>
                        <signature>int32(bool, System.DateTime)</signature>
                        <name>GetYear</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetYear</name>
                    </method>
                    <method>
                        <signature>void(bool, System.DateTime, int32&amp;, int32&amp;)</signature>
                        <name>GetYearAndRemainingDays</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>HasLeapFrac</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32, int32)</signature>
                        <name>IsLeapDay</name>
                    </method>
                    <method>
                        <signature>bool(int32, int32, int32)</signature>
                        <name>IsLeapMonth</name>
                    </method>
                    <method>
                        <signature>bool(bool, int32, int32)</signature>
                        <name>IsLeapYear</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>IsLeapYear</name>
                    </method>
                    <method>
                        <signature>int32(bool, int32)</signature>
                        <name>NumberOfLeapYearsUntil</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>NumberOfLeapYearsUntil</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TwoDigitYearMax</name>
                    </method>
                    <method>
                        <signature>System.DateTime(int32, int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>ToDateTime</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ToFourDigitYear</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>PersianEra</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>twoDigitYearMax</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[]()</signature>
                        <name>Eras</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TwoDigitYearMax</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianDate</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.TimeSpan)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FADatePicker.Utilies.PersianDate)</signature>
                        <name>Assign</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>CheckDay</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckHour</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckMillisecond</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckMinute</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckMonth</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckSecond</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>CheckYear</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>int32(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>Compare</name>
                    </method>
                    <method>
                        <signature>int32(object, object)</signature>
                        <name>Compare</name>
                    </method>
                    <method>
                        <signature>int32(FADatePicker.Utilies.PersianDate)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AMDesignator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Day</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek()</signature>
                        <name>get_DayOfWeek</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Hour</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsNull</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalizedMonthName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LocalizedWeekDayName</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Millisecond</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Minute</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Month</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MonthDays</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate()</signature>
                        <name>get_Now</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PMDesignator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Second</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Time</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Year</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_GreaterThan</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_GreaterThanOrEqual</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(System.DateTime)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>System.DateTime(FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_LessThan</name>
                    </method>
                    <method>
                        <signature>bool(FADatePicker.Utilies.PersianDate, FADatePicker.Utilies.PersianDate)</signature>
                        <name>op_LessThanOrEqual</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string, bool)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string, string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string)</signature>
                        <name>ParseDateShortTime</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string)</signature>
                        <name>ParseFullDateTime</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate(string)</signature>
                        <name>ParseShortDate</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Day</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Hour</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Millisecond</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Minute</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Month</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Second</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Year</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string, System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToWritten</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>amDesignator</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>day</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>hour</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate</signature>
                        <name>MaxValue</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>millisecond</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minute</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate</signature>
                        <name>MinValue</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>month</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate</signature>
                        <name>now</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianCalendar</signature>
                        <name>pc</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pmDesignator</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>second</name>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>time</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>year</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AMDesignator</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Day</name>
                    </property>
                    <property>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek()</signature>
                        <name>DayOfWeek</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Hour</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsNull</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalizedMonthName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LocalizedWeekDayName</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Millisecond</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Minute</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Month</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MonthDays</name>
                    </property>
                    <property>
                        <signature>FADatePicker.Utilies.PersianDate()</signature>
                        <name>Now</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PMDesignator</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Second</name>
                    </property>
                    <property>
                        <signature>System.TimeSpan()</signature>
                        <name>Time</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Year</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianDate/PersianMonthNames</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate/PersianMonthNames()</signature>
                        <name>get_Default</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetName</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Aban</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Azar</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Bahman</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Day</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate/PersianMonthNames</signature>
                        <name>def</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Esfand</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Farvardin</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Khordad</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Mehr</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Mordad</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Ordibehesht</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Shahrivar</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Tir</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.Utilies.PersianDate/PersianMonthNames()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianDate/PersianWeekDayAbbr</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayAbbr()</signature>
                        <name>get_Default</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetName</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Chaharshanbeh</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayAbbr</signature>
                        <name>def</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Doshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Jomeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Panjshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Seshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Shanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Yekshanbeh</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayAbbr()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianDate/PersianWeekDayNames</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayNames()</signature>
                        <name>get_Default</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetName</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Chaharshanbeh</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayNames</signature>
                        <name>def</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Doshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Jomeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Panjshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Seshanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Shanbeh</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Yekshanbeh</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FADatePicker.Utilies.PersianDate/PersianWeekDayNames()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.PersianDayOfWeek</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Friday</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Monday</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Saturday</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Sunday</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Thursday</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Tuesday</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>FADatePicker.Utilies.PersianDayOfWeek</signature>
                        <name>Wednesday</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.toPersian</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>string(string, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Utilies.Utilities</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>toDouble</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ValueValidatingEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasError</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HasError</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>hasError</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>value</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>HasError</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.ValueValidatingEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, FADatePicker.ValueValidatingEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, FADatePicker.ValueValidatingEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.Win32.User32</name>
                <newname>eval_n</newname>
                <methodlist>
                    <method>
                        <signature>bool(native int, native int, int32, int32, int32, int32, unsigned int32)</signature>
                        <name>SetWindowPos</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>ShowWindow</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FADatePicker.XPThemeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FADatePicker.XPThemeType</signature>
                        <name>Homestead</name>
                    </field>
                    <field>
                        <signature>FADatePicker.XPThemeType</signature>
                        <name>Metallic</name>
                    </field>
                    <field>
                        <signature>FADatePicker.XPThemeType</signature>
                        <name>NormalColor</name>
                    </field>
                    <field>
                        <signature>FADatePicker.XPThemeType</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>82</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>804</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>372</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>134</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>27</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>27</statistic>
            <statistic>32.93 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>180</statistic>
            <statistic>22.39 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>201</statistic>
            <statistic>54.03 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_a'</description>
            <statistic>78</statistic>
            <statistic>9.70 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_b'</description>
            <statistic>29</statistic>
            <statistic>3.61 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_c'</description>
            <statistic>16</statistic>
            <statistic>1.99 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_d'</description>
            <statistic>16</statistic>
            <statistic>1.99 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_e'</description>
            <statistic>8</statistic>
            <statistic>1.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_f'</description>
            <statistic>8</statistic>
            <statistic>1.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_g'</description>
            <statistic>5</statistic>
            <statistic>0.62 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>